name: "Authenticate to Kubernetes cluster in Cloud Platform"
description: "Authenticate to Kubernetes cluster in Cloud Platform"
inputs:
  kube-cert:
    description: Kubernetes cluster authentication certificate
    required: true
  kube-cluster:
    description: Kubernetes cluster name
    required: true
  kube-namespace:
    description: Kubernetes cluster namespace
    required: true
  kube-token:
    description: Kubernetes cluster authentication token
    required: true

runs:
  using: composite
  steps:
    - name: Authenticate to the cluster using kubectl
      shell: bash
      env:
        KUBE_CERT: ${{ inputs.kube-cert }}
        KUBE_TOKEN: ${{ inputs.kube-token }}
        KUBE_CLUSTER: ${{ inputs.kube-cluster }}
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
        KUBE_SERVICE_ACCOUNT: deploy-user
      run: |
        set -euo pipefail
        if [[ -n "${KUBE_CERT}" && -n "${KUBE_TOKEN}" ]]; then
          echo "${KUBE_CERT}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials ${KUBE_SERVICE_ACCOUNT} --token=${KUBE_TOKEN}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=${KUBE_SERVICE_ACCOUNT} --namespace=${KUBE_NAMESPACE}
          kubectl config use-context ${KUBE_CLUSTER}
        else
          echo "Did not authenticate as Kubernetes credentials were empty"
        fi