name: Code Coverage

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      packages: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Make Gradle Wrapper Executable
        run: chmod +x gradlew

      - name: Run Tests and Generate Aggregated Report
        run: ./gradlew clean build jacocoAggregatedReport --continue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Show Coverage Summary in Terminal
        run: |
          echo "Coverage Summary (from XML):"
          XML_FILE="build/reports/jacoco/aggregated.xml"
          
          if [ -f "$XML_FILE" ]; then
            # Try LINE coverage first
            LINE_COVERED=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" "$XML_FILE" 2>/dev/null)
            LINE_MISSED=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" "$XML_FILE" 2>/dev/null)
          
            # Fallback to INSTRUCTION if LINE not found
            if [ -z "$LINE_COVERED" ] || [ -z "$LINE_MISSED" ]; then
              LINE_COVERED=$(xmllint --xpath "string(//report/counter[@type='INSTRUCTION']/@covered)" "$XML_FILE" 2>/dev/null)
              LINE_MISSED=$(xmllint --xpath "string(//report/counter[@type='INSTRUCTION']/@missed)" "$XML_FILE" 2>/dev/null)
              TYPE="Instruction"
            else
              TYPE="Line"
            fi
          
            if [ -n "$LINE_COVERED" ] && [ -n "$LINE_MISSED" ]; then
              TOTAL=$((LINE_COVERED + LINE_MISSED))
              if [ "$TOTAL" -gt 0 ]; then
                PERCENT=$(awk "BEGIN { printf \"%.2f\", ($LINE_COVERED / $TOTAL) * 100 }")
                echo "✅ $TYPE Coverage: $LINE_COVERED / $TOTAL = $PERCENT%"
              else
                echo "⚠️ $TYPE Coverage: No data available (0 total)"
              fi
            else
              echo "❌ Could not parse coverage values from XML."
            fi
          else
            echo "❌ Could not read coverage summary. File does not exist: $XML_FILE"
          fi

      - name: Publish PR Coverage Comment
        if: github.event_name == 'pull_request'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: build/reports/jacoco/aggregated.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'JaCoCo Code Coverage Report'
          update-comment: true
          pass-emoji: ':white_check_mark:'
          fail-emoji: ':x:'
          min-coverage-overall: 0
          min-coverage-changed-files: 0
