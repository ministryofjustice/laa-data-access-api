name: Preview Teardown

on:
  pull_request:
    types: [ closed ]
  workflow_dispatch:
    inputs:
      prnum:   { type: number,  required: true,  description: "Pull request #"}

permissions: { contents: read }

concurrency:
  group: "preview-deploy-pr-${{ (github.event_name == 'pull_request' && github.event.pull_request.number) || inputs.pr_number }}"
  cancel-in-progress: true

env:
  PRNUM: ${{ (github.event_name == 'pull_request' && github.event.pull_request.number) || inputs.prnum }}

jobs:
  plan:
    name: "Plan"
    permissions: { contents: read }
    runs-on: ubuntu-latest
    steps:
      - name: "Determine variable values"
        id:   vars
        shell: bash
        run: |
          set -euo pipefail
          echo "- github.event_name=${{ github.event_name }}"
          echo "- env.PRNUM=$PRNUM"
          PATTERN='^[1-9][0-9]*$'
          if [[ ! "$PRNUM" =~ $PATTERN ]]; then
            echo "PR number does not have expected format"
            exit 1
          fi

  teardown:
    name: "Tear down pr-${{ (github.event_name == 'pull_request' && github.event.pull_request.number) || inputs.prnum }} preview"
    needs: [plan]
    runs-on: ubuntu-latest
    env:
      PREVIEW: "pr-${{ (github.event_name == 'pull_request' && github.event.pull_request.number) || inputs.prnum }}"
      ENV:     "uat"
    environment:
      name: uat-preview
      url:  https://laa-data-access-api-pr-${{ (github.event_name == 'pull_request' && github.event.pull_request.number) || inputs.prnum }}.apps.cloud-platform.service.justice.gov.uk
    steps:
      - uses: actions/checkout@v5

      - name: "Authenticate with Kubernetes cluster"
        uses: ./.github/actions/cp-kube-auth
        with:
          kube-cert:      "${{ secrets.KUBE_CERT }}"
          kube-cluster:   "${{ secrets.KUBE_CLUSTER }}"
          kube-namespace: "${{ secrets.KUBE_NAMESPACE }}"
          kube-token:     "${{ secrets.KUBE_TOKEN }}"

      - name: "Uninstall Helm chart"
        run: |
          set -euo pipefail
          if [[ -n "${{ secrets.KUBE_CERT }}" && -n "${{ secrets.KUBE_TOKEN }}" ]]; then
            echo "Uninstall Helm chart - env: \"$ENV\", preview: \"$PREVIEW\""
            helm status "$PREVIEW" -n "laa-data-access-service-$ENV" >/dev/null 2>&1 && \
                helm uninstall "$PREVIEW" -n "laa-data-access-service-$ENV" || true
          else
            echo "Did not helm uninstall as Kubernetes credentials were empty"
          fi
