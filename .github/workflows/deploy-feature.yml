name: Deploy feature

on:
  push:
    branches:
      - 'feature-dev/**'
      - 'feature-uat/**'

permissions:
  contents: read

jobs:
  define-feature-version:
    runs-on: ubuntu-latest
    outputs:
      feature_version: ${{ steps.get-feature-version.outputs.feature_version }}
    steps:
      - uses: actions/checkout@v5
      - uses: ministryofjustice/laa-ccms-common-workflows/.github/actions/remove-prefix@v1
        id: get-feature-name
        with:
          string: ${{ github.ref_name }}
          prefix: 'feature-*/'
      - name: Get feature version
        id: get-feature-version
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "feature_version=${{ steps.get-feature-name.outputs.result }}-${COMMIT_HASH}-SNAPSHOT" >> $GITHUB_OUTPUT
          echo "Feature version: ${{ steps.get-feature-name.outputs.result }}-${COMMIT_HASH}-SNAPSHOT"

  build-and-publish-snapshot:
    needs: [ define-feature-version ]
    uses: ministryofjustice/laa-ccms-common-workflows/.github/workflows/gradle-build-and-publish.yml@v1
    permissions:
      contents: write
      packages: write
    with:
      integration_test_task: "integrationTest --tests '*IntegrationTest'"
      publish_package: 'true'
      override_version: ${{ needs.define-feature-version.outputs.feature_version }}
      junit_results_path: 'data-access-service/build/test-results'
      junit_report_path: 'data-access-service/build/reports/tests'
      checkstyle_report_path: 'data-access-service/build/reports/checkstyle'
      jacoco_coverage_report: 'false'
      jacoco_coverage_report_path: 'data-access-service/build/reports/jacoco'
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}

  ecr-publish-image:
    needs: [ build-and-publish-snapshot ]
    uses: ministryofjustice/laa-ccms-common-workflows/.github/workflows/ecr-publish-image.yml@v1
    permissions:
      contents: read
      id-token: write
    with:
      image_version: ${{ format('{0}-{1}', vars.IMAGE_PREFIX, needs.build-and-publish-snapshot.outputs.published_artifact_version) }}
      jar_subproject: 'data-access-service'
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
      ecr_repository: ${{ vars.ECR_REPOSITORY }}
      ecr_region: ${{ vars.ECR_REGION }}
      ecr_role_to_assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}

  update-helm-chart:
    needs: [ ecr-publish-image ]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository (Full Clone)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y yq

      - name: Update Helm Chart Version
        run: |
          git config user.email "${{ inputs.github_bot_username || 'github-actions-bot' }}[bot]@users.noreply.github.com"
          git config user.name "${{ inputs.github_bot_username || 'github-actions-bot' }}[bot]"
          
          APP_VERSION="${{ needs.ecr-publish-image.outputs.published_image_version }}"          
          yq e ".appVersion = \"$APP_VERSION\"" -i .helm/data-access-api/Chart.yaml
          
          git add .helm/data-access-api/Chart.yaml
          git commit -m "chore: Update data-access-api appVersion to $APP_VERSION"
          
          git push origin HEAD:${{ github.ref_name }}
          
          echo "Helm chart 'data-access-api' appVersion updated to $APP_VERSION"