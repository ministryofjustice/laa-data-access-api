name: Deploy feature

on:
  push:
    branches:
      - 'feature-dev/**'
      - 'feature-uat/**'

permissions:
  contents: read

jobs:
  define-feature-version:
    runs-on: ubuntu-latest
    outputs:
      feature_version: ${{ steps.get-feature-version.outputs.feature_version }}
    steps:
      - uses: actions/checkout@v5
      - uses: ministryofjustice/laa-ccms-common-workflows/.github/actions/remove-prefix@v1
        id: get-feature-name
        with:
          string: ${{ github.ref_name }}
          prefix: 'feature-*/'
      - name: Get feature version
        id: get-feature-version
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "feature_version=${{ steps.get-feature-name.outputs.result }}-${COMMIT_HASH}-SNAPSHOT" >> $GITHUB_OUTPUT
          echo "Feature version: ${{ steps.get-feature-name.outputs.result }}-${COMMIT_HASH}-SNAPSHOT"

  build-and-publish-snapshot:
    needs: [ define-feature-version ]
    uses: ministryofjustice/laa-ccms-common-workflows/.github/workflows/gradle-build-and-publish.yml@v1
    permissions:
      contents: write
      packages: write
    with:
      integration_test_task: "integrationTest --tests '*IntegrationTest'"
      publish_package: 'true'
      override_version: ${{ needs.define-feature-version.outputs.feature_version }}
      junit_results_path: 'data-access-service/build/test-results'
      junit_report_path: 'data-access-service/build/reports/tests'
      checkstyle_report_path: 'data-access-service/build/reports/checkstyle'
      jacoco_coverage_report: 'false'
      jacoco_coverage_report_path: 'data-access-service/build/reports/jacoco'
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}

  ecr-publish-image:
    needs: [ build-and-publish-snapshot ]
    uses: ministryofjustice/laa-ccms-common-workflows/.github/workflows/ecr-publish-image.yml@v1
    permissions:
      contents: read
      id-token: write
    with:
      image_version: ${{ format('{0}-{1}', vars.IMAGE_PREFIX, needs.build-and-publish-snapshot.outputs.published_artifact_version) }}
      jar_subproject: 'data-access-service'
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
      ecr_repository: ${{ vars.ECR_REPOSITORY }}
      ecr_region: ${{ vars.ECR_REGION }}
      ecr_role_to_assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}

  deploy-uat:
    if: ${{ !contains(github.actor, '[bot]') }}
    needs: [ ecr-publish-image, build-and-publish-snapshot ]
    uses: ministryofjustice/laa-reusable-github-actions/.github/workflows/cp-deplopy.yml@main
    #environment: uat
    #runs-on: ubuntu-latest
    #`with:
      #environment: "uat"
      #image_repo: ${{ secrets.ECR_REPOSITORY }}
      #image_registry: ${{ secrets.ECR_REGISTRY_URL }}
      #image_tag: ${{ format('{0}-{1}', vars.IMAGE_PREFIX, needs.build-and-publish-snapshot.outputs.published_artifact_version) }}
      #helm_release_name: 'data-access-api'
      #helm_values_path: '../.helm/data-access-api/values/uat.yaml'
      #helm_chart: '../.helm/Chart.yaml'
    secrets:
      KUBE_CERT: ${{ secrets.KUBE_CERT }}
      KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
      KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
      KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      ECR_REGISTRY_URL: ${{ secrets.ECR_REGISTRY_URL }}