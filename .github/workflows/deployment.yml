name: Deployment Pipeline
permissions:
  contents: write
  packages: read
  id-token: write
  security-events: write

on:
  workflow_dispatch:
  pull_request:
    branches: [ feature/** ]

jobs:
  uat-deployment:
    name: UAT deployment
    uses: ./.github/workflows/reusable-deployment.yml
    with:
      environment: uat
      environment-prefix: Uat
      ecr-repository: ECR_REPOSITORY
      ecr-region: ECR_REGION
      branch-name: main
      prometheus_severity: laa-provider-data-api-alerts-nonprod
      spring_profile: uat
    secrets:
      ecr-role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
      kube_namespace: ${{ secrets.KUBE_NAMESPACE }}
      kube_cluster: ${{ secrets.KUBE_CLUSTER }}
      kube_token: ${{ secrets.KUBE_TOKEN }}
      kube_cert: ${{ secrets.KUBE_CERT }}
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
      GITHUBAPP_ID: ${{ secrets.GITHUBAPP_ID }}
      GITHUBAPP_PRIVATE_KEY: ${{ secrets.GITHUBAPP_PRIVATE_KEY }}

  staging-deployment:
    name: Staging deployment
    needs: uat-deployment
    uses: ./.github/workflows/reusable-deployment.yml
    with:
      environment: staging
      environment-prefix: Staging
      ecr-repository: ECR_REPOSITORY
      ecr-region: ECR_REGION
      branch-name: main
      prometheus_severity: laa-provider-data-api-alerts-nonprod
      spring_profile: staging
    secrets:
      ecr-role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
      kube_namespace: ${{ secrets.KUBE_NAMESPACE }}
      kube_cluster: ${{ secrets.KUBE_CLUSTER }}
      kube_token: ${{ secrets.KUBE_TOKEN }}
      kube_cert: ${{ secrets.KUBE_CERT }}
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
      GITHUBAPP_ID: ${{ secrets.GITHUBAPP_ID }}
      GITHUBAPP_PRIVATE_KEY: ${{ secrets.GITHUBAPP_PRIVATE_KEY }}

  prod-deployment:
    name: Prod deployment
    needs: staging-deployment
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/reusable-deployment.yml
    with:
      environment: prod
      environment-prefix: Prod
      ecr-repository: ECR_REPOSITORY
      ecr-region: ECR_REGION
      branch-name: main
      prometheus_severity: laa-provider-details-api-alerts-prod
      spring_profile: prod
    secrets:
      ecr-role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
      kube_namespace: ${{ secrets.KUBE_NAMESPACE }}
      kube_cluster: ${{ secrets.KUBE_CLUSTER }}
      kube_token: ${{ secrets.KUBE_TOKEN }}
      kube_cert: ${{ secrets.KUBE_CERT }}
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
      GITHUBAPP_ID: ${{ secrets.GITHUBAPP_ID }}
      GITHUBAPP_PRIVATE_KEY: ${{ secrets.GITHUBAPP_PRIVATE_KEY }}